CREATE DOMAIN MIRTH_BOOLEAN AS
 SMALLINT
 CHECK (value is null or value in (0, 1));

CREATE TABLE SCHEMA_INFO
(
  "VERSION"              VARCHAR(40)
);

CREATE SEQUENCE EVENT_SEQUENCE;

CREATE TABLE "EVENT"
(
  ID                        INTEGER NOT NULL,
  DATE_CREATED            TIMESTAMP DEFAULT NULL,
  NAME                         BLOB SUB_TYPE 1 SEGMENT SIZE 80 NOT NULL,
  EVENT_LEVEL               VARCHAR(40) NOT NULL,
  OUTCOME                   VARCHAR(40) NOT NULL,
  ATTRIBUTES                   BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  USER_ID                   INTEGER NOT NULL,
  IP_ADDRESS                VARCHAR(40),
  SERVER_ID                 VARCHAR(36),
 CONSTRAINT PK_EVENT PRIMARY KEY (ID)
);	
	
CREATE TRIGGER BI_EVENT FOR "EVENT" ACTIVE BEFORE INSERT POSITION 10 AS
BEGIN
   IF (NEW.ID IS NULL) THEN
   BEGIN
      NEW.ID = GEN_ID(EVENT_SEQUENCE, 1);
   END
END
	
CREATE TABLE CHANNEL
(
  ID                    CHAR(36) NOT NULL,
  NAME                  VARCHAR(40) NOT NULL,
  REVISION              INTEGER,
  CHANNEL               BLOB SUB_TYPE 1 SEGMENT SIZE 80,
 PRIMARY KEY (ID)
);

CREATE TABLE SCRIPT
(
  GROUP_ID                 CHAR(36) NOT NULL,
  ID                       CHAR(36) NOT NULL,
  SCRIPT                   BLOB SUB_TYPE 1 SEGMENT SIZE 80,
 CONSTRAINT PK_SCRIPT PRIMARY KEY (GROUP_ID, ID)
);	

CREATE SEQUENCE PERSON_SEQUENCE;

CREATE TABLE PERSON
(
  ID                              INTEGER         NOT NULL,
  USERNAME                        VARCHAR(    40) NOT NULL ,
  FIRSTNAME                       VARCHAR(    40),
  LASTNAME                        VARCHAR(    40),
  ORGANIZATION                    VARCHAR(   255),
  INDUSTRY VARCHAR(255),
  EMAIL                           VARCHAR(   255),
  PHONENUMBER                     VARCHAR(    40),
  DESCRIPTION                     VARCHAR(   255),
  LAST_LOGIN                      TIMESTAMP         DEFAULT NULL,
  GRACE_PERIOD_START              TIMESTAMP         DEFAULT NULL,
  STRIKE_COUNT                    INTEGER,
  LAST_STRIKE_TIME                DATETIME DEFAULT NULL,
  LOGGED_IN                 MIRTH_BOOLEAN NOT NULL,
 CONSTRAINT PK_PERSON PRIMARY KEY (ID)
)	

CREATE TRIGGER BI_PERSON FOR PERSON ACTIVE BEFORE INSERT POSITION 10 AS
BEGIN
   IF (NEW.ID IS NULL) THEN
   BEGIN
      NEW.ID = GEN_ID(PERSON_SEQUENCE, 1);
   END
END

CREATE TABLE PERSON_PREFERENCE
(
  PERSON_ID INTEGER NOT NULL,
  NAME VARCHAR(255) NOT NULL,
  "VALUE" BLOB SUB_TYPE 1 SEGMENT SIZE 80
);
    
ALTER TABLE PERSON_PREFERENCE ADD CONSTRAINT PERSON_ID_PERSON_PREF_FK
  FOREIGN KEY (PERSON_ID) REFERENCES PERSON(ID)
  ON DELETE CASCADE;

CREATE TABLE PERSON_PASSWORD
(
  PERSON_ID                  INTEGER         NOT NULL,
  "PASSWORD"                 VARCHAR(   256) NOT NULL,
  PASSWORD_DATE            TIMESTAMP         DEFAULT NULL,
 PRIMARY KEY (PERSON_ID)
);	

ALTER TABLE PERSON_PASSWORD ADD CONSTRAINT FK_PERSON_PASSWORD_PERSON
  FOREIGN KEY (PERSON_ID) REFERENCES PERSON
  (ID)
  ON DELETE CASCADE
  ON UPDATE CASCADE
  
CREATE TABLE ALERT
(
  ID                    CHAR(    36) NOT NULL,
  NAME               VARCHAR(   255) NOT NULL,
  ALERT                 BLOB SUB_TYPE 1 SEGMENT SIZE 80 NOT NULL,
 PRIMARY KEY (ID)
);

ALTER TABLE ALERT ADD UNIQUE
  (NAME);
	
CREATE TABLE CODE_TEMPLATE_LIBRARY (
  ID        VARCHAR(255) NOT NULL,
  NAME      VARCHAR(255) NOT NULL,
  REVISION  INTEGER,
  LIBRARY   BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  PRIMARY KEY (ID)
);

ALTER TABLE CODE_TEMPLATE_LIBRARY ADD UNIQUE
  (NAME);

CREATE TABLE CODE_TEMPLATE
(
  ID                         VARCHAR(255) NOT NULL,
  NAME                       VARCHAR(255) NOT NULL,
  REVISION                   INTEGER,
  CODE_TEMPLATE              BLOB SUB_TYPE 1 SEGMENT SIZE 80,
  PRIMARY KEY (ID)
);	

CREATE SEQUENCE CONFIGURATION_SEQUENCE;

CREATE TABLE CONFIGURATION
(
  CATEGORY              VARCHAR(   255) NOT NULL,
  NAME                  VARCHAR(   255) NOT NULL,
  "VALUE"               BLOB SUB_TYPE 1 SEGMENT SIZE 80
);	

CREATE TABLE CHANNEL_GROUP
(
	ID 					VARCHAR(255) NOT NULL,
	NAME 				VARCHAR(255) NOT NULL,
	REVISION 			INTEGER,
	CHANNEL_GROUP 		BLOB SUB_TYPE 1 SEGMENT SIZE 80,
	PRIMARY KEY (ID)
);

ALTER TABLE CHANNEL_GROUP ADD CONSTRAINT U_CHGRP_NAME UNIQUE (NAME);

INSERT INTO PERSON (USERNAME, LOGGED_IN) VALUES('mirthhl7', 0);

INSERT INTO PERSON_PASSWORD (PERSON_ID, PASSWORD) VALUES(1, 'BS0mJIEdbo6H516J64IByp9Yl1K8aAw1y04SYmHeRyzBT6Hnnr+9rw==');

INSERT INTO SCHEMA_INFO (VERSION) VALUES ('3.11.0');

INSERT INTO CONFIGURATION (CATEGORY, NAME, VALUE) VALUES ('core', 'stats.enabled', '1');

INSERT INTO CONFIGURATION (CATEGORY, NAME, VALUE) VALUES ('core', 'server.resetglobalvariables', '1');

INSERT INTO CONFIGURATION (CATEGORY, NAME, VALUE) VALUES ('core', 'smtp.timeout', '5000');

INSERT INTO CONFIGURATION (CATEGORY, NAME, VALUE) VALUES ('core', 'smtp.auth', '0');

INSERT INTO CONFIGURATION (CATEGORY, NAME, VALUE) VALUES ('core', 'smtp.secure', '0');

INSERT INTO CONFIGURATION (CATEGORY, NAME, VALUE) VALUES ('core', 'server.queuebuffersize', '1000');

INSERT INTO PERSON_PREFERENCE (PERSON_ID, NAME, VALUE) VALUES (1, 'firstlogin', 'false')